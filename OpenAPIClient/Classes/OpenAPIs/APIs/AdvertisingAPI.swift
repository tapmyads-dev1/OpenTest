//
// AdvertisingAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AdvertisingAPI {

    /**
     Get Rewarded Ad Placements
     
     - parameter appID: (query) The current AppID to use 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getRewardedAdPlacements(appID: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: GetRewardedAdPlacementsResult?, _ error: Error?) -> Void)) -> RequestTask {
        return getRewardedAdPlacementsWithRequestBuilder(appID: appID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Rewarded Ad Placements
     - GET /GetRewardedAdPlacements
     - Returns a list of ad placements and a reward for each
     - BASIC:
       - type: http
       - name: bearerAuth
     - parameter appID: (query) The current AppID to use 
     - returns: RequestBuilder<GetRewardedAdPlacementsResult> 
     */
    open class func getRewardedAdPlacementsWithRequestBuilder(appID: String) -> RequestBuilder<GetRewardedAdPlacementsResult> {
        let localVariablePath = "/GetRewardedAdPlacements"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "AppID": (wrappedValue: appID.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<GetRewardedAdPlacementsResult>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
